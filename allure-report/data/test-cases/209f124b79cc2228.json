{"uid":"209f124b79cc2228","name":"Тест: ввод почты и клик по кнопке «Восстановить»","fullName":"tests.restore_password_test.TestRestorePassword#test_open_reset_pass_page","historyId":"79cfc7485a0fd4718bbc5f98dc26963f","time":{"start":1734730992984,"stop":1734731004278,"duration":11294},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.205)\nStacktrace:\n\tGetHandleVerifier [0x00007FF60E81FB05+28789]\n\t(No symbol) [0x00007FF60E7886E0]\n\t(No symbol) [0x00007FF60E62592A]\n\t(No symbol) [0x00007FF60E5FF505]\n\t(No symbol) [0x00007FF60E6A6477]\n\t(No symbol) [0x00007FF60E6BEF42]\n\t(No symbol) [0x00007FF60E69F1E3]\n\t(No symbol) [0x00007FF60E66A938]\n\t(No symbol) [0x00007FF60E66BAA1]\n\tGetHandleVerifier [0x00007FF60EB5933D+3410093]\n\tGetHandleVerifier [0x00007FF60EB6E7DD+3497293]\n\tGetHandleVerifier [0x00007FF60EB62A73+3448803]\n\tGetHandleVerifier [0x00007FF60E8E7BBB+848171]\n\t(No symbol) [0x00007FF60E793C3F]\n\t(No symbol) [0x00007FF60E78F6E4]\n\t(No symbol) [0x00007FF60E78F87D]\n\t(No symbol) [0x00007FF60E77ED49]\n\tBaseThreadInitThunk [0x00007FFD25D07374+20]\n\tRtlUserThreadStart [0x00007FFD25F5CC91+33]","statusTrace":"self = <restore_password_test.TestRestorePassword object at 0x00000228FCCF5D10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c08050f7fda78a6a366aae5f628a7af0\")>\nrecover_password = <pages.login_page.ResetPassword object at 0x00000228FCD34C20>\ntest_user_create = {'email': 'r.shchetnikov:16476151@yandex.ru', 'name': 'Username:16476151', 'password': 'password:16476151'}\n\n    @allure.title(\"Тест: ввод почты и клик по кнопке «Восстановить»\")\n    def test_open_reset_pass_page(self, driver, recover_password, test_user_create):\n        recover_password.click_on_login_to_account()\n        WebDriverWait(driver, 20).until(expected_conditions.element_to_be_clickable(login_page_login_button))\n        recover_password.click_on_recover_password_button()\n        recover_password.input_email_recover(test_user_create[\"email\"])\n        recover_password.click_recover_password()\n>       WebDriverWait(driver, 20).until(expected_conditions.visibility_of_element_located(reset_pass_second_field))\n\ntests\\restore_password_test.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000228FCD341A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF60E77ED49]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD25D07374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD25F5CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.205)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF60E81FB05+28789]\nE       \t(No symbol) [0x00007FF60E7886E0]\nE       \t(No symbol) [0x00007FF60E62592A]\nE       \t(No symbol) [0x00007FF60E5FF505]\nE       \t(No symbol) [0x00007FF60E6A6477]\nE       \t(No symbol) [0x00007FF60E6BEF42]\nE       \t(No symbol) [0x00007FF60E69F1E3]\nE       \t(No symbol) [0x00007FF60E66A938]\nE       \t(No symbol) [0x00007FF60E66BAA1]\nE       \tGetHandleVerifier [0x00007FF60EB5933D+3410093]\nE       \tGetHandleVerifier [0x00007FF60EB6E7DD+3497293]\nE       \tGetHandleVerifier [0x00007FF60EB62A73+3448803]\nE       \tGetHandleVerifier [0x00007FF60E8E7BBB+848171]\nE       \t(No symbol) [0x00007FF60E793C3F]\nE       \t(No symbol) [0x00007FF60E78F6E4]\nE       \t(No symbol) [0x00007FF60E78F87D]\nE       \t(No symbol) [0x00007FF60E77ED49]\nE       \tBaseThreadInitThunk [0x00007FFD25D07374+20]\nE       \tRtlUserThreadStart [0x00007FFD25F5CC91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1734730986330,"stop":1734730992469,"duration":6139},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"test_user_create","time":{"start":1734730992469,"stop":1734730992984,"duration":515},"status":"passed","steps":[{"name":"Создание пользователя через api","time":{"start":1734730992470,"stop":1734730992984,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"random_user_for_register","value":"{'email': 'r.shchetnikov:16476151@yandex.ru', 'password': 'password:16476151', 'name': 'Username:16476151'}"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"random_user_for_register","time":{"start":1734730992469,"stop":1734730992469,"duration":0},"status":"passed","steps":[{"name":"Генерация пользовательских данных","time":{"start":1734730992469,"stop":1734730992469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"recover_password","time":{"start":1734730992469,"stop":1734730992469,"duration":0},"status":"passed","steps":[{"name":"Открытие главной страницы","time":{"start":1734730992469,"stop":1734730992469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c08050f7fda78a6a366aae5f628a7af0\")>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.205)\nStacktrace:\n\tGetHandleVerifier [0x00007FF60E81FB05+28789]\n\t(No symbol) [0x00007FF60E7886E0]\n\t(No symbol) [0x00007FF60E62592A]\n\t(No symbol) [0x00007FF60E5FF505]\n\t(No symbol) [0x00007FF60E6A6477]\n\t(No symbol) [0x00007FF60E6BEF42]\n\t(No symbol) [0x00007FF60E69F1E3]\n\t(No symbol) [0x00007FF60E66A938]\n\t(No symbol) [0x00007FF60E66BAA1]\n\tGetHandleVerifier [0x00007FF60EB5933D+3410093]\n\tGetHandleVerifier [0x00007FF60EB6E7DD+3497293]\n\tGetHandleVerifier [0x00007FF60EB62A73+3448803]\n\tGetHandleVerifier [0x00007FF60E8E7BBB+848171]\n\t(No symbol) [0x00007FF60E793C3F]\n\t(No symbol) [0x00007FF60E78F6E4]\n\t(No symbol) [0x00007FF60E78F87D]\n\t(No symbol) [0x00007FF60E77ED49]\n\tBaseThreadInitThunk [0x00007FFD25D07374+20]\n\tRtlUserThreadStart [0x00007FFD25F5CC91+33]","statusTrace":"self = <restore_password_test.TestRestorePassword object at 0x00000228FCCF5D10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c08050f7fda78a6a366aae5f628a7af0\")>\nrecover_password = <pages.login_page.ResetPassword object at 0x00000228FCD34C20>\ntest_user_create = {'email': 'r.shchetnikov:16476151@yandex.ru', 'name': 'Username:16476151', 'password': 'password:16476151'}\n\n    @allure.title(\"Тест: ввод почты и клик по кнопке «Восстановить»\")\n    def test_open_reset_pass_page(self, driver, recover_password, test_user_create):\n        recover_password.click_on_login_to_account()\n        WebDriverWait(driver, 20).until(expected_conditions.element_to_be_clickable(login_page_login_button))\n        recover_password.click_on_recover_password_button()\n        recover_password.input_email_recover(test_user_create[\"email\"])\n        recover_password.click_recover_password()\n>       WebDriverWait(driver, 20).until(expected_conditions.visibility_of_element_located(reset_pass_second_field))\n\ntests\\restore_password_test.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000228FCD341A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF60E77ED49]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD25D07374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD25F5CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.205)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF60E81FB05+28789]\nE       \t(No symbol) [0x00007FF60E7886E0]\nE       \t(No symbol) [0x00007FF60E62592A]\nE       \t(No symbol) [0x00007FF60E5FF505]\nE       \t(No symbol) [0x00007FF60E6A6477]\nE       \t(No symbol) [0x00007FF60E6BEF42]\nE       \t(No symbol) [0x00007FF60E69F1E3]\nE       \t(No symbol) [0x00007FF60E66A938]\nE       \t(No symbol) [0x00007FF60E66BAA1]\nE       \tGetHandleVerifier [0x00007FF60EB5933D+3410093]\nE       \tGetHandleVerifier [0x00007FF60EB6E7DD+3497293]\nE       \tGetHandleVerifier [0x00007FF60EB62A73+3448803]\nE       \tGetHandleVerifier [0x00007FF60E8E7BBB+848171]\nE       \t(No symbol) [0x00007FF60E793C3F]\nE       \t(No symbol) [0x00007FF60E78F6E4]\nE       \t(No symbol) [0x00007FF60E78F87D]\nE       \t(No symbol) [0x00007FF60E77ED49]\nE       \tBaseThreadInitThunk [0x00007FFD25D07374+20]\nE       \tRtlUserThreadStart [0x00007FFD25F5CC91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException","steps":[{"name":"Клик по кнопке Войти в аккаунт","time":{"start":1734730992985,"stop":1734730993030,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Клик по кнопке Восстановить пароль","time":{"start":1734730993046,"stop":1734730993082,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Ввести почту в поле email","time":{"start":1734730993083,"stop":1734730993130,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"email","value":"'r.shchetnikov:16476151@yandex.ru'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Клик по кнопке Восстановить","time":{"start":1734730993130,"stop":1734730993162,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1734731004381,"stop":1734731005434,"duration":1053},"status":"broken","statusMessage":"KeyboardInterrupt\n","statusTrace":"  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n    ~~~~^^^^\n  File \"C:\\Users\\mmavr\\yandex\\Diplom\\Diplom_3\\conftest.py\", line 35, in driver\n    driver.quit()\n    ~~~~~~~~~~~^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 193, in quit\n    self.service.stop()\n    ~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 149, in stop\n    self.send_remote_shutdown_command()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 134, in send_remote_shutdown_command\n    if not self.is_connectable():\n           ~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 123, in is_connectable\n    return utils.is_connectable(self.port)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\utils.py\", line 101, in is_connectable\n    socket_ = socket.create_connection((host, port), 1)\n  File \"C:\\Users\\mmavr\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\socket.py\", line 856, in create_connection\n    exceptions.clear()  # raise only the last error\n    ~~~~~~~~~~~~~~~~^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('recover_password')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"restore_password_test"},{"name":"subSuite","value":"TestRestorePassword"},{"name":"host","value":"DESKTOP-7LU8FN0"},{"name":"thread","value":"15636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.restore_password_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('recover_password')"]},"source":"209f124b79cc2228.json","parameterValues":[]}